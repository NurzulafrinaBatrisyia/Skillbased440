// Question 2 â€“ C Socket Programming (Server)
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

int generate_random_number() {
    return rand() % 900 + 100; // Generate a random number between 100 and 999
}

int main() {
    int server_socket, client_socket;
    struct sockaddr_in server_addr, client_addr;
    socklen_t addr_len = sizeof(client_addr);

    // Create a socket
    server_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (server_socket == -1) {
        perror("Error creating socket");
        return 1;
    }

    // Bind the socket to a port
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(8443); // Choose any available port
    server_addr.sin_addr.s_addr = INADDR_ANY;

    if (bind(server_socket, (struct sockaddr*)&server_addr, sizeof(server_addr)) == -1) {
        perror("Error binding");
        return 1;
    }

    // Listen for incoming connections
    if (listen(server_socket, 5) == -1) {
        perror("Error listening");
        return 1;
    }

    printf("Server is waiting for connections...\n");

    // Accept a connection from a client
    client_socket = accept(server_socket, (struct sockaddr*)&client_addr, &addr_len);
    if (client_socket == -1) {
        perror("Error accepting connection");
        return 1;
    }

    printf("Connection established with the client.\n");

    // Generate a random number
    int random_number = generate_random_number();
    printf("Random number generated: %d\n", random_number);

    // Send the random number to the client
    if (send(client_socket, &random_number, sizeof(random_number), 0) == -1) {
        perror("Error sending data");
        return 1;
    }

    // Close the sockets
    close(client_socket);
    close(server_socket);

    return 0;
}
